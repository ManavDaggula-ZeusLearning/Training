-- SETTING OFFSET TO FILL DATA FROM EARLIEST ENTRY
SET 'auto.offset.reset' = 'earliest';

-- CREATING STREAMS
CREATE STREAM DISTRICT_VALUES (BEFORE STRUCT<ID INT, NAME VARCHAR>, AFTER STRUCT<ID INT, NAME VARCHAR>, OP VARCHAR, TS_MS BIGINT) WITH (KAFKA_TOPIC='dbserver1.kafkadb.district', VALUE_FORMAT='JSON');
CREATE STREAM SCHOOLS_VALUES(BEFORE STRUCT<ID INT, NAME VARCHAR, DISRTICT_ID INT>, AFTER STRUCT<ID INT, NAME VARCHAR, DISTRICT_ID INT>, OP VARCHAR, TS_MS BIGINT) WITH (KAFKA_TOPIC='dbserver1.kafkadb.schools', VALUE_FORMAT='JSON');
CREATE STREAM CLASS_VALUES(BEFORE STRUCT<ID INT, NAME VARCHAR, SCHOOL_ID INT>, AFTER STRUCT<ID INT, NAME VARCHAR, SCHOOL_ID INT>, OP VARCHAR, TS_MS BIGINT) WITH (KAFKA_TOPIC='dbserver1.kafkadb.class', VALUE_FORMAT='JSON');
CREATE STREAM USER_VALUES(BEFORE STRUCT<ID INT, NAME VARCHAR, DOB DATE>, AFTER STRUCT<ID INT, NAME VARCHAR, DOB DATE>, OP VARCHAR, TS_MS BIGINT) WITH (KAFKA_TOPIC='dbserver1.kafkadb.users', VALUE_FORMAT='JSON');
CREATE STREAM ENROLLMENT_VALUES(BEFORE STRUCT<USER_ID INT, CLASS_ID INT, ID INT>, AFTER STRUCT<USER_ID INT, CLASS_ID INT, ID INT>, OP VARCHAR, TS_MS BIGINT) WITH (KAFKA_TOPIC='dbserver1.kafkadb.enrollment', VALUE_FORMAT='JSON');

-- CREATING TABLES
CREATE TABLE DISTRICT_TABLE AS SELECT DISTRICT_VALUES.AFTER->ID ID, LATEST_BY_OFFSET(DISTRICT_VALUES.AFTER->NAME) NAME FROM DISTRICT_VALUES DISTRICT_VALUES GROUP BY DISTRICT_VALUES.AFTER->ID EMIT CHANGES;
--CREATE TABLE SCHOOLS_TABLE AS SELECT AFTER->ID ID, LATEST_BY_OFFSET(AFTER->NAME) NAME, LATEST_BY_OFFSET(AFTER->DISTRICT_ID) DISTRICT_ID FROM SCHOOLS_VALUES GROUP BY AFTER->ID EMIT CHANGES;
create table schools_table as select s.after->id as id, latest_by_offset(s.after->name) as school, lat
est_by_offset(d.name) as district, latest_by_offset(d.id) as district_id from schools_values s join district_table d on s.after->district_id=d.id group by s.after->id emit changes;
CREATE TABLE CLASS_TABLE AS SELECT AFTER->ID AS ID, LATEST_BY_OFFSET(AFTER->NAME) AS NAME, LATEST_BY_OFFSET(AFTER->SCHOOL_ID) AS SCHOOL_ID FROM CLASS_VALUES GROUP BY AFTER->ID EMIT CHANGES;
create table class_denorm as select * from class_table c join schools_table s on c.school_id=s.id emit changes;
CREATE TABLE USER_TABLE AS SELECT AFTER->ID AS ID, LATEST_BY_OFFSET(AFTER->NAME) AS NAME, LATEST_BY_OFFSET(AFTER->DOB) AS DOB FROM USER_VALUES GROUP BY AFTER->ID EMIT CHANGES;
create table enrollment_table as select e.after->id, latest_by_offset(e.after->user_id) as user, lates
t_by_offset(e.after->class_id) as class from enrollment_values e group by e.after->id emit changes;



-- SAMPLE JOIN QUERIES
SELECT S.ID, S.NAME, D.NAME AS LOCATION FROM SCHOOLS_TABLE AS S LEFT JOIN DISTRICT_TABLE AS D ON S.DISTRICT_ID=D.ID EMIT CHANGES;
SELECT C.ID, C.NAME, S.NAME AS SCHOOL FROM CLASS_TABLE AS C LEFT JOIN SCHOOLS_TABLE AS S ON C.SCHOOL_ID=S.ID EMIT CHANGES;
